///////////////////////////////////

// JS Spring Lobby Interface

// By CarRepairer

// License: GPL 2

///////////////////////////////////


define(
	'lwidgets/SpringSettings',
	[
		"dojo/_base/declare",
		
		'dojo/topic',
		'dojo/_base/array',
		'dojo/dom-construct',
		'dojo/dom-style',
		'dojo/dom-attr',
		'dojo/_base/lang',
		'dojo/Deferred',
		'dojo/promise/all',

		"dijit/form/TextBox",
		"dijit/form/ValidationTextBox",
		"dijit/form/CheckBox",
		"dijit/form/Button",
		"dijit/form/Select",
		"dijit/form/ToggleButton",
		"dijit/Dialog",
		"dijit/Tooltip",
		
	],
	function(declare,
		topic, array, domConstruct, domStyle, domAttr, lang,
		Deferred, all,
		TextBox,
		ValidationTextBox,
		CheckBox,
		Button,
		Select,
		ToggleButton,
		Dialog,
		Tooltip
	){
	return declare([ ], {

	options: null,
	optionsLoaded: null,
	version: 0,
	appletHandler: null,
	subscription: null,
	
	constructor: function(args)
	{
		declare.safeMixin(this, args);
		
		options = {};
		this.optionsLoaded = new Deferred;
		// TODO: Due to a bug (swl-qt #11) options can't be read from spring.
		// Once it's fixed in a new build these 2 lines should be removed.
		this.optionsLoaded.resolve();
		return;

		this.subscription = topic.subscribe('Lobby/commandStream', lang.hitch(this, 'commandStream'));
		var exec = this.appletHandler.getEngineExec(this.version)
		this.optionsJson = '';
		this.commandName = 'spring_settings_' + this.version;
		this.appletHandler.runCommand(this.commandName, [exec, '--list-config-vars']); },

	commandStream: function(data)
	{
		if( data.cmdName === this.commandName )
		{
			if( data.line.match(/Using configuration source/) === null )
				this.optionsJson += data.line;
		}
		else if( data.cmdName === 'exit' && data.line === this.commandName )
		{
			this.options = JSON.parse(this.optionsJson);
			this.subscription.remove();
			this.optionsLoaded.resolve();
		}
	},
		
	showDialog: function()
	{
		return this.optionsLoaded.then(lang.hitch(this, function(){
			return this.makeOptions();
		})).then(lang.hitch(this, function(content){
			var dlg = new Dialog({
				title: 'Engine Options (' + this.version + ')',
				content: content,
				style: {width: '500px'}
			});
			dlg.startup();
			dlg.show();
		}));
	}, //showDialog
	
	makeOptions: function( )
	{
		var unitsync = this.appletHandler.getUnitsync(this.version);
		var content = domConstruct.create( 'div', { style: {width: '100%',height: '380px', overflow: 'auto' } } )
		var values = {};
		for( var optionKey in this.options )
		{
			var option = this.options[optionKey];

			if( option.type === 'std::string' )
				values[optionKey] = unitsync.getSpringConfigString(optionKey, option.defaultValue);
			else if( option.type === 'bool' || option.type === 'int' || option.type === 'unsigned' )
				values[optionKey] = unitsync.getSpringConfigInt(optionKey, option.defaultValue);
			else if( option.type === 'float' )
				values[optionKey] = unitsync.getSpringConfigFloat(optionKey, option.defaultValue);
		}

		return all(values).then(lang.hitch(this, function(values){
			for(var key in values)
			{
				var option = this.options[key];
				var rowDiv = domConstruct.create('div', { class: 'engineOption' }, content );
				var titleDiv = domConstruct.create('div', { class: 'optionTitle' }, rowDiv );
				domConstruct.create('p', { class: 'optionName', innerHTML: key }, titleDiv );
				if( option.description )
					domConstruct.create('p', { class: 'optionDesc', innerHTML: option.description }, titleDiv );
				var control;
				if( option.type === 'bool' )
				{
					control = new CheckBox({
						name: key,
						checked: values[key] === 1 ? true : false,
						class: 'optionControl',
						onChange: function(val){
							unitsync.setSpringConfigInt(this.name, val ? 1 : 0);
						}
					}).placeAt(rowDiv);
				}
				else
				{
					var regexp, setFunc;
					if( option.type === 'std::string' )
					{
						regexp = '.*';
						setFunc = unitsync.setSpringConfigString;
					}
					else if( option.type === 'int' || option.type === 'unsigned' )
					{
						regexp = '-?[0-9]+';
						setFunc = unitsync.setSpringConfigInt;
					}
					else if( option.type === 'float' )
					{
						regexp = '-?[0-9]+(\\.[0-9]+)?([eE][0-9]+)?';
						setFunc = unitsync.setSpringConfigFloat;
					}
					control = new ValidationTextBox({
						name: key,
						value: values[key],
						pattern: regexp,
						intermediateChanges: true,
						class: 'optionControl',
						onChange: function(val){
							if( val.match('^' + this.pattern + '$') !== null )
								setFunc(this.name, val);
						}
					}).placeAt(rowDiv);
				}

				if( option.readOnly == 1 )
					control.set('disabled', true);
			}

			return content;
		}));
	},
	
	// Due to a bug (swl-qt #11) options can't be read from spring.
	// Once it's fixed in a new build this should be removed.
	options: {"3DTrees":{"declarationFile":"../../rts/Rendering/Env/ITreeDrawer.cpp","declarationLine":22,"description":"Defines whether or not the trees generated by the engine (Default trees) will be shown as 3d or as cross sectioned ( + ) flat sides.","defaultValue":1,"safemodeValue":0,"type":"bool"},"AdvMapShading":{"declarationFile":"../../rts/Map/SMF/SMFGroundDrawer.cpp","declarationLine":33,"description":"Enable shaders for terrain rendering and enable so more effects.","defaultValue":1,"safemodeValue":0,"type":"bool"},"AdvSky":{"declarationFile":"../../rts/Rendering/Env/ISky.cpp","declarationLine":16,"description":"Enables High Resolution Clouds.","defaultValue":0,"type":"bool"},"AdvUnitShading":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":81,"description":"Determines whether specular highlights and other lighting effects are rendered for units.","defaultValue":1,"safemodeValue":0,"type":"bool"},"AllowDeferredMapRendering":{"declarationFile":"../../rts/Map/SMF/SMFGroundDrawer.cpp","declarationLine":34,"defaultValue":0,"safemodeValue":0,"type":"bool"},"AllowDeferredModelRendering":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":82,"defaultValue":0,"safemodeValue":0,"type":"bool"},"AtiHacks":{"declarationFile":"../../rts/Rendering/GlobalRendering.cpp","declarationLine":19,"description":"Enables graphics drivers workarounds for users with ATI video cards.\n -1:=runtime detect, 0:=off, 1:=on","defaultValue":-1,"minimumValue":-1,"maximumValue":1,"type":"int"},"AtiSwapRBFix":{"declarationFile":"../../rts/Rendering/GL/FBO.cpp","declarationLine":16,"defaultValue":0,"type":"bool"},"AutoAddBuiltUnitsToFactoryGroup":{"declarationFile":"../../rts/Game/SelectedUnitsHandler.cpp","declarationLine":49,"description":"Controls whether or not units built by factories will inherit that factory's unit group.","defaultValue":0,"type":"bool"},"AutoAddBuiltUnitsToSelectedGroup":{"declarationFile":"../../rts/Game/SelectedUnitsHandler.cpp","declarationLine":50,"defaultValue":0,"type":"bool"},"AutohostIP":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":87,"defaultValue":"127.0.0.1","type":"std::string"},"AutohostPort":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":73,"defaultValue":0,"type":"int"},"BuildIconsFirst":{"declarationFile":"../../rts/Game/SelectedUnitsHandler.cpp","declarationLine":48,"defaultValue":0,"type":"bool"},"BumpWaterAnisotropy":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":49,"defaultValue":0,"minimumValue":0,"type":"float"},"BumpWaterBlurReflection":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":52,"defaultValue":0,"type":"bool"},"BumpWaterDepthBits":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":51,"defaultValue":24,"minimumValue":16,"maximumValue":32,"type":"int"},"BumpWaterDynamicWaves":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":55,"defaultValue":1,"type":"bool"},"BumpWaterEndlessOcean":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":54,"description":"Sets whether Bumpmapped water will be drawn beyond the map edge.","defaultValue":1,"type":"bool"},"BumpWaterOcclusionQuery":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":57,"defaultValue":0,"type":"bool"},"BumpWaterReflection":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":47,"description":"Determines the amount of objects reflected in Bumpmapped water.\n0:=off, 1:=fast (skip terrain), 2:=full","defaultValue":1,"minimumValue":0,"maximumValue":2,"type":"int"},"BumpWaterRefraction":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":48,"description":"Determines the method of refraction with Bumpmapped water.\n0:=off, 1:=screencopy, 2:=own rendering cycle","defaultValue":1,"minimumValue":0,"maximumValue":2,"type":"int"},"BumpWaterShoreWaves":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":53,"description":"Enables rendering of shorewaves.","defaultValue":1,"safemodeValue":0,"type":"bool"},"BumpWaterTexSizeReflection":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":46,"description":"Sets the size of the framebuffer texture used to store the reflection in Bumpmapped water.","defaultValue":512,"minimumValue":32,"type":"int"},"BumpWaterUseDepthTexture":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":50,"defaultValue":1,"type":"bool"},"BumpWaterUseUniforms":{"declarationFile":"../../rts/Rendering/Env/BumpWater.cpp","declarationLine":56,"defaultValue":0,"type":"bool"},"BypassScriptPasswordCheck":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":76,"defaultValue":0,"type":"bool"},"CamFreeAngVelTime":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":28,"defaultValue":1,"type":"float"},"CamFreeAutoTilt":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":26,"defaultValue":150,"type":"float"},"CamFreeEnabled":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":17,"defaultValue":0,"type":"bool"},"CamFreeFOV":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":20,"defaultValue":45,"type":"float"},"CamFreeGoForward":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":19,"defaultValue":0,"type":"bool"},"CamFreeGravity":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":22,"defaultValue":-500,"type":"float"},"CamFreeGroundOffset":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":24,"defaultValue":16,"type":"float"},"CamFreeInvertAlt":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":18,"defaultValue":0,"type":"bool"},"CamFreeScrollSpeed":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":21,"defaultValue":500,"type":"float"},"CamFreeSlide":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":23,"defaultValue":0.5,"type":"float"},"CamFreeTiltSpeed":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":25,"defaultValue":150,"type":"float"},"CamFreeVelTime":{"declarationFile":"../../rts/Game/Camera/FreeController.cpp","declarationLine":27,"defaultValue":1.5,"type":"float"},"CamMode":{"declarationFile":"../../rts/Game/CameraHandler.cpp","declarationLine":37,"description":"Defines the used camera. Options are:\n0 = FPS\n1 = Overhead\n2 = TotalWar\n3 = RotOverhead\n4 = Free\n5 = SmoothOverhead\n6 = Orbit\n7 = Overview","defaultValue":5,"minimumValue":0,"maximumValue":7,"type":"int"},"CamModeName":{"declarationFile":"../../rts/Game/CameraHandler.cpp","declarationLine":35,"defaultValue":"","type":"std::string"},"CamTimeExponent":{"declarationFile":"../../rts/Game/CameraHandler.cpp","declarationLine":56,"defaultValue":4,"minimumValue":0,"type":"float"},"CamTimeFactor":{"declarationFile":"../../rts/Game/CameraHandler.cpp","declarationLine":52,"defaultValue":1,"minimumValue":0,"type":"float"},"CatchAIExceptions":{"declarationFile":"../../rts/ExternalAI/EngineOutHandler.cpp","declarationLine":29,"defaultValue":1,"type":"int"},"ColorElev":{"declarationFile":"../../rts/Map/HeightLinePalette.cpp","declarationLine":7,"defaultValue":1,"type":"bool"},"CompressTextures":{"declarationFile":"../../rts/Rendering/GlobalRendering.cpp","declarationLine":17,"defaultValue":0,"safemodeValue":1,"type":"bool"},"CrossAlpha":{"declarationFile":"../../rts/Game/UI/MouseHandler.cpp","declarationLine":66,"defaultValue":0.5,"type":"float"},"CrossMoveScale":{"declarationFile":"../../rts/Game/UI/MouseHandler.cpp","declarationLine":67,"defaultValue":1,"type":"float"},"CrossSize":{"declarationFile":"../../rts/Game/UI/MouseHandler.cpp","declarationLine":65,"defaultValue":12,"type":"float"},"CubeTexSizeReflection":{"declarationFile":"../../rts/Rendering/Env/CubeMapHandler.cpp","declarationLine":17,"defaultValue":128,"minimumValue":1,"type":"int"},"CubeTexSizeSpecular":{"declarationFile":"../../rts/Rendering/Env/CubeMapHandler.cpp","declarationLine":16,"defaultValue":128,"minimumValue":1,"type":"int"},"DemoFromDemo":{"declarationFile":"../../rts/Game/PreGame.cpp","declarationLine":53,"defaultValue":0,"type":"bool"},"DisableCrappyGPUWarning":{"declarationFile":"../../rts/Rendering/GL/myGL.cpp","declarationLine":28,"description":"Disables the warning an user will receive if (s)he attempts to run Spring on an outdated and underpowered video card.","defaultValue":0,"type":"bool"},"DisableDemoVersionCheck":{"declarationFile":"../../rts/System/LoadSave/DemoReader.cpp","declarationLine":7,"description":"Allow to play every replay file (may crash / cause undefined behaviour in replays)","defaultValue":0,"type":"bool"},"DoubleClickTime":{"declarationFile":"../../rts/Game/UI/MouseHandler.cpp","declarationLine":58,"description":"Double click time in milliseconds.","defaultValue":200,"type":"float"},"DualScreenMiniMapOnLeft":{"declarationFile":"../../rts/Rendering/GlobalRendering.cpp","declarationLine":21,"description":"When set, will make the left half of the screen the minimap when DualScreenMode is set.","defaultValue":0,"type":"bool"},"DualScreenMode":{"declarationFile":"../../rts/Rendering/GlobalRendering.cpp","declarationLine":20,"description":"Sets whether to split the screen in half, with one half for minimap and one for main screen. Right side is for minimap unless DualScreenMiniMapOnLeft is set.","defaultValue":0,"type":"bool"},"DynamicSky":{"declarationFile":"../../rts/Rendering/Env/BasicSky.cpp","declarationLine":21,"description":"Sets whether the clouds in the sky will be procedurally generated and moved. Resource heavy!","defaultValue":0,"type":"bool"},"DynamicSun":{"declarationFile":"../../rts/Rendering/Env/ISky.cpp","declarationLine":15,"description":"Sets whether the sun will move around the sky throughout the game.\nThe sun will always stay above DynamicSunMinElevation","defaultValue":0,"type":"bool"},"DynamicSunMinElevation":{"declarationFile":"../../rts/Rendering/Env/SkyLight.cpp","declarationLine":15,"description":"Sets the minimum elevation of the dynamic sun. If less than 0.0, the sun can disappear under the map completely as it moves.","defaultValue":0.1,"type":"float"},"EnableDrawCallIns":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":63,"defaultValue":1,"type":"bool"},"EnableUnsafeAndBrokenMT":{"declarationFile":"../../rts/Sim/Misc/ModInfo.cpp","declarationLine":21,"description":"Enable unsafe MT modes (very likely to cause crashes / hangs / graphical errors)","defaultValue":0,"type":"bool"},"ExtraTextureUpdateRate":{"declarationFile":"../../rts/Map/BaseGroundDrawer.cpp","declarationLine":26,"defaultValue":45,"type":"int"},"FPSEnabled":{"declarationFile":"../../rts/Game/Camera/FPSController.cpp","declarationLine":18,"defaultValue":1,"type":"bool"},"FPSFOV":{"declarationFile":"../../rts/Game/Camera/FPSController.cpp","declarationLine":19,"defaultValue":45,"type":"float"},"FPSMouseScale":{"declarationFile":"../../rts/Game/Camera/FPSController.cpp","declarationLine":17,"defaultValue":0.01,"type":"float"},"FPSScrollSpeed":{"declarationFile":"../../rts/Game/Camera/FPSController.cpp","declarationLine":16,"defaultValue":10,"type":"int"},"FSAALevel":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":89,"description":"If >0 enables FullScreen AntiAliasing.","defaultValue":0,"minimumValue":0,"maximumValue":8,"type":"int"},"FeatureDrawDistance":{"declarationFile":"../../rts/Rendering/FeatureDrawer.cpp","declarationLine":38,"description":"Maximum distance at which features will be drawn.","defaultValue":6000,"minimumValue":0,"type":"float"},"FeatureFadeDistance":{"declarationFile":"../../rts/Rendering/FeatureDrawer.cpp","declarationLine":43,"description":"Distance at which features will begin to fade from view.","defaultValue":4500,"minimumValue":0,"type":"float"},"FixAltTab":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":93,"defaultValue":0,"type":"bool"},"FontFile":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":94,"description":"Sets the font of Spring engine text.","defaultValue":"fonts/FreeSansBold.otf","type":"std::string"},"FontOutlineWeight":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":99,"description":"Sets the opacity of Spring engine text, such as the title screen version number, clock, and basic UI. Does not affect LuaUI elements.","defaultValue":25,"type":"float"},"FontOutlineWidth":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":98,"description":"Sets the width of the black outline around Spring engine text, such as the title screen version number, clock, and basic UI. Does not affect LuaUI elements.","defaultValue":3,"type":"int"},"FontSize":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":96,"description":"Sets the font size (in pixels) of the MainMenu and more.","defaultValue":23,"type":"int"},"ForceEnableIntelShaderSupport":{"declarationFile":"../../rts/Rendering/GlobalRendering.cpp","declarationLine":18,"defaultValue":0,"type":"bool"},"Fullscreen":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":102,"description":"Sets whether the game will run in fullscreen, as opposed to a window. For Windowed Fullscreen of Borderless Window, set this to 0, WindowBorderless to 1, and WindowPosX and WindowPosY to 0.","defaultValue":1,"type":"bool"},"FullscreenEdgeMove":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":172,"description":"see WindowedEdgeMove, just for fullscreen mode","defaultValue":1,"type":"bool"},"GrassDetail":{"declarationFile":"../../rts/Rendering/Env/GrassDrawer.cpp","declarationLine":28,"description":"Sets how detailed the engine rendered grass will be on any given map.","defaultValue":7,"minimumValue":0,"type":"int"},"GroundDecals":{"declarationFile":"../../rts/Rendering/Env/IGroundDecalDrawer.cpp","declarationLine":10,"description":"Controls whether ground decals underneath buildings and ground scars from explosions will be rendered. Values >1 define how long such decals will stay.","defaultValue":1,"minimumValue":0,"type":"int"},"GroundDetail":{"declarationFile":"../../rts/Map/SMF/SMFGroundDrawer.cpp","declarationLine":25,"description":"Controls how detailed the map geometry will be. On lowered settings, cliffs may appear to be jagged or \"melting\".","defaultValue":60,"minimumValue":0,"maximumValue":200,"type":"int"},"GroundLODScaleReflection":{"declarationFile":"../../rts/Map/BaseGroundDrawer.cpp","declarationLine":22,"defaultValue":1,"type":"float"},"GroundLODScaleRefraction":{"declarationFile":"../../rts/Map/BaseGroundDrawer.cpp","declarationLine":23,"defaultValue":1,"type":"float"},"GroundLODScaleTerrainReflection":{"declarationFile":"../../rts/Map/BaseGroundDrawer.cpp","declarationLine":24,"defaultValue":1,"type":"float"},"GroundNormalTextureHighPrecision":{"declarationFile":"../../rts/Map/SMF/SMFReadMap.cpp","declarationLine":28,"defaultValue":0,"type":"bool"},"GroundScarAlphaFade":{"declarationFile":"../../rts/Rendering/Env/Decals/GroundDecalHandler.cpp","declarationLine":42,"defaultValue":0,"type":"int"},"GuiOpacity":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":178,"description":"Sets the opacity of the built-in Spring UI. Generally has no effect on LuaUI widgets. Can be set in-game using shift+, to decrease and shift+. to increase.","defaultValue":0.8,"minimumValue":0,"maximumValue":1,"type":"float"},"HangTimeout":{"declarationFile":"../../rts/System/Platform/Watchdog.cpp","declarationLine":26,"description":"Number of seconds that, if spent in the same code segment, indicate a hang; -1 to disable.","defaultValue":10,"minimumValue":-1,"maximumValue":600,"type":"int"},"HardwareCursor":{"declarationFile":"../../rts/Game/UI/MouseHandler.cpp","declarationLine":56,"description":"Sets hardware mouse cursor rendering. If you have a low framerate, your mouse cursor will seem \"laggy\". Setting hardware cursor will render the mouse cursor separately from spring and the mouse will behave normally. Note, not all GPU drivers support it in fullscreen mode!","defaultValue":0,"type":"bool"},"HeightMapTexture":{"declarationFile":"../../rts/Map/HeightMapTexture.cpp","declarationLine":12,"defaultValue":1,"type":"bool"},"HighResLos":{"declarationFile":"../../rts/Map/BaseGroundDrawer.cpp","declarationLine":25,"description":"Controls whether LOS (\"L view\") edges are rendered in high resolution. Resource heavy!","defaultValue":0,"type":"bool"},"InfoConsoleGeometry":{"declarationFile":"../../rts/Game/UI/InfoConsole.cpp","declarationLine":19,"defaultValue":"0.26 0.96 0.41 0.205","type":"std::string"},"InfoMessageTime":{"declarationFile":"../../rts/Game/UI/InfoConsole.cpp","declarationLine":18,"defaultValue":400,"type":"int"},"InitialNetworkTimeout":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":16,"defaultValue":30,"minimumValue":10,"type":"int"},"InputTextGeo":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":179,"defaultValue":"","type":"std::string"},"InvertMouse":{"declarationFile":"../../rts/Game/UI/MouseHandler.cpp","declarationLine":57,"defaultValue":0,"type":"bool"},"InvertQueueKey":{"declarationFile":"../../rts/Game/UI/GuiHandler.cpp","declarationLine":63,"defaultValue":0,"type":"bool"},"JoystickEnabled":{"declarationFile":"../../rts/System/Input/Joystick.cpp","declarationLine":12,"defaultValue":1,"type":"bool"},"JoystickUse":{"declarationFile":"../../rts/System/Input/Joystick.cpp","declarationLine":13,"defaultValue":0,"type":"int"},"LODScale":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":84,"defaultValue":1,"type":"float"},"LODScaleReflection":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":86,"defaultValue":1,"type":"float"},"LODScaleRefraction":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":87,"defaultValue":1,"type":"float"},"LODScaleShadow":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":85,"defaultValue":1,"type":"float"},"LastSelectedMap":{"declarationFile":"../../rts/Menu/SelectionWidget.cpp","declarationLine":22,"description":"Stores the previously played map.","defaultValue":"No map selected","type":"std::string"},"LastSelectedMod":{"declarationFile":"../../rts/Menu/SelectionWidget.cpp","declarationLine":21,"description":"Stores the previously played game.","defaultValue":"No game selected","type":"std::string"},"LastSelectedScript":{"declarationFile":"../../rts/Menu/SelectionWidget.cpp","declarationLine":23,"description":"Stores the previously played AI.","defaultValue":"No script selected","type":"std::string"},"LastSelectedSetting":{"declarationFile":"../../rts/Menu/SelectMenu.cpp","declarationLine":44,"description":"Stores the previously selected setting, when editing settings within the Spring main menu.","defaultValue":"","type":"std::string"},"LinkIncomingMaxPacketRate":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":44,"defaultValue":64,"minimumValue":0,"type":"int"},"LinkIncomingMaxWaitingPackets":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":50,"defaultValue":512,"minimumValue":0,"type":"int"},"LinkIncomingPeakBandwidth":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":40,"defaultValue":32768,"minimumValue":0,"type":"int"},"LinkIncomingSustainedBandwidth":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":36,"defaultValue":2048,"minimumValue":0,"type":"int"},"LinkOutgoingBandwidth":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":32,"defaultValue":65536,"minimumValue":0,"type":"int"},"LoadingMT":{"declarationFile":"../../rts/Game/LoadScreen.cpp","declarationLine":41,"defaultValue":-1,"safemodeValue":0,"type":"int"},"LogFlush":{"declarationFile":"../../rts/System/LogOutput.cpp","declarationLine":44,"description":"Instantly write to the logfile, use only for debugging as it will cause a slowdown","defaultValue":1,"type":"bool"},"LogSections":{"declarationFile":"../../rts/System/LogOutput.cpp","declarationLine":35,"description":"Comma seperated list of enabled logsections, see infolog.txt / console output for possible values","defaultValue":"","type":"std::string"},"LuaModUICtrl":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":180,"defaultValue":1,"type":"bool"},"LuaShaders":{"declarationFile":"../../rts/Lua/LuaOpenGL.cpp","declarationLine":79,"defaultValue":1,"safemodeValue":0,"type":"bool"},"LuaSocketEnabled":{"declarationFile":"../../rts/Lua/LuaUI.cpp","declarationLine":60,"description":"Enable LuaSocket support, allows a lua-widget to make TCP/UDP Connections","readOnly":1,"defaultValue":1,"type":"bool"},"LuaWritableConfigFile":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":61,"defaultValue":1,"type":"bool"},"MapBorder":{"declarationFile":"../../rts/Map/SMF/SMFGroundDrawer.cpp","declarationLine":26,"description":"Draws a solid border at the edges of the map.","defaultValue":1,"type":"bool"},"MaxDynamicMapLights":{"declarationFile":"../../rts/Map/SMF/SMFGroundDrawer.cpp","declarationLine":29,"defaultValue":1,"minimumValue":0,"type":"int"},"MaxDynamicModelLights":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":77,"defaultValue":1,"minimumValue":0,"type":"int"},"MaxLuaGarbageCollectionSteps":{"declarationFile":"../../rts/Lua/LuaHandle.cpp","declarationLine":2876,"defaultValue":10000,"minimumValue":1,"type":"int"},"MaxLuaGarbageCollectionTime":{"declarationFile":"../../rts/Lua/LuaHandle.cpp","declarationLine":2875,"defaultValue":33.3333,"minimumValue":1,"type":"float"},"MaxLuaGarbageMemoryFootPrint":{"declarationFile":"../../rts/Lua/LuaHandle.cpp","declarationLine":2877,"defaultValue":64,"minimumValue":32,"type":"int"},"MaxNanoParticles":{"declarationFile":"../../rts/Sim/Projectiles/ProjectileHandler.cpp","declarationLine":38,"defaultValue":2000,"type":"int"},"MaxParticles":{"declarationFile":"../../rts/Sim/Projectiles/ProjectileHandler.cpp","declarationLine":37,"defaultValue":3000,"type":"int"},"MaxPathCostsMemoryFootPrint":{"declarationFile":"../../rts/Sim/Path/Default/PathEstimator.cpp","declarationLine":37,"description":"Maximum memusage (in MByte) of mutlithreaded pathcache generator at loading time.","defaultValue":512,"minimumValue":64,"type":"int"},"MaxSounds":{"declarationFile":"../../rts/System/Sound/Sound.cpp","declarationLine":33,"description":"Maximum parallel played sounds.","defaultValue":128,"minimumValue":0,"type":"int"},"MaximumTransmissionUnit":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":28,"defaultValue":1400,"minimumValue":400,"type":"int"},"MenuArchive":{"declarationFile":"../../rts/Menu/SelectMenu.cpp","declarationLine":45,"description":"Archive name for the default Menu.","defaultValue":"Spring Bitmaps","type":"std::string"},"MetalMapPalette":{"declarationFile":"../../rts/Map/MetalMap.cpp","declarationLine":9,"defaultValue":0,"type":"bool"},"MiddleClickScrollSpeed":{"declarationFile":"../../rts/Game/Camera/OverheadController.cpp","declarationLine":18,"defaultValue":0.01,"type":"float"},"MiniMapButtonSize":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":59,"defaultValue":16,"type":"int"},"MiniMapCursorScale":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":66,"defaultValue":-0.5,"type":"float"},"MiniMapDrawCommands":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":69,"defaultValue":1,"minimumValue":0,"type":"int"},"MiniMapDrawProjectiles":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":73,"defaultValue":1,"type":"bool"},"MiniMapFullProxy":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":58,"defaultValue":1,"type":"bool"},"MiniMapGeometry":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":57,"defaultValue":"2 2 200 200","type":"std::string"},"MiniMapIcons":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":67,"defaultValue":1,"type":"bool"},"MiniMapMarker":{"declarationFile":"../../rts/Game/UI/GuiHandler.cpp","declarationLine":62,"defaultValue":1,"type":"bool"},"MiniMapRefreshRate":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":77,"description":"The refresh rate of the async MiniMap texture. Needs MiniMapRenderToTexture to be true. Value of \"0\" autoselects between 10-60FPS.","defaultValue":0,"minimumValue":0,"type":"int"},"MiniMapRenderToTexture":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":76,"description":"Asynchronous render MiniMap to a texture independent of screen FPS.","defaultValue":1,"safemodeValue":0,"type":"bool"},"MiniMapUnitExp":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":65,"defaultValue":0.25,"type":"float"},"MiniMapUnitSize":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":61,"defaultValue":2.5,"minimumValue":0,"type":"float"},"MouseDragScrollThreshold":{"declarationFile":"../../rts/Game/UI/MouseHandler.cpp","declarationLine":68,"defaultValue":0.3,"type":"float"},"MultiThreadCount":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":111,"defaultValue":0,"minimumValue":0,"maximumValue":34,"safemodeValue":1,"type":"int"},"MultiThreadDrawUnit":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":74,"defaultValue":1,"type":"bool"},"MultiThreadDrawUnitShadow":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":75,"defaultValue":1,"type":"bool"},"MultiThreadLua":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":65,"defaultValue":0,"minimumValue":0,"maximumValue":6,"type":"int"},"NetworkLossFactor":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":11,"defaultValue":0,"minimumValue":0,"maximumValue":2,"type":"int"},"NetworkTimeout":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":20,"defaultValue":120,"minimumValue":0,"type":"int"},"NoHelperAIs":{"declarationFile":"../../rts/System/StartScriptGen.cpp","declarationLine":15,"defaultValue":0,"type":"bool"},"NoSound":{"declarationFile":"../../rts/System/Sound/ISound.cpp","declarationLine":13,"defaultValue":0,"type":"bool"},"OrbitControllerEnabled":{"declarationFile":"../../rts/Game/Camera/OrbitController.cpp","declarationLine":16,"defaultValue":1,"type":"bool"},"OrbitControllerOrbitSpeed":{"declarationFile":"../../rts/Game/Camera/OrbitController.cpp","declarationLine":17,"defaultValue":0.25,"minimumValue":0.1,"maximumValue":10,"type":"float"},"OrbitControllerPanSpeed":{"declarationFile":"../../rts/Game/Camera/OrbitController.cpp","declarationLine":18,"defaultValue":2,"minimumValue":0.1,"maximumValue":10,"type":"float"},"OrbitControllerZoomSpeed":{"declarationFile":"../../rts/Game/Camera/OrbitController.cpp","declarationLine":19,"defaultValue":5,"minimumValue":0.1,"maximumValue":10,"type":"float"},"OverheadEnabled":{"declarationFile":"../../rts/Game/Camera/OverheadController.cpp","declarationLine":21,"defaultValue":1,"type":"bool"},"OverheadFOV":{"declarationFile":"../../rts/Game/Camera/OverheadController.cpp","declarationLine":22,"defaultValue":45,"type":"float"},"OverheadScrollSpeed":{"declarationFile":"../../rts/Game/Camera/OverheadController.cpp","declarationLine":19,"defaultValue":10,"type":"int"},"OverheadTiltSpeed":{"declarationFile":"../../rts/Game/Camera/OverheadController.cpp","declarationLine":20,"defaultValue":1,"type":"float"},"PathingThreadCount":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":110,"defaultValue":0,"minimumValue":0,"safemodeValue":1,"type":"int"},"PitchAdjust":{"declarationFile":"../../rts/System/Sound/Sound.cpp","declarationLine":34,"description":"When enabled adjust sound speed/pitch to game speed.","defaultValue":0,"type":"bool"},"ROAM":{"declarationFile":"../../rts/Map/SMF/SMFGroundDrawer.cpp","declarationLine":36,"description":"Use ROAM for terrain mesh rendering. 0:=disable ROAM, 1=VBO mode, 2=DL mode, 3=VA mode","defaultValue":1,"minimumValue":0,"maximumValue":3,"safemodeValue":2,"type":"int"},"ReconnectTimeout":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":24,"defaultValue":15,"minimumValue":0,"type":"int"},"ReflectiveWater":{"declarationFile":"../../rts/Rendering/Env/IWater.cpp","declarationLine":16,"description":"Defines the type of water rendering. Can be set in game. Options are: 0 = Basic water, 1 = Reflective water, 2 = Reflective and Refractive water, 3 = Dynamic water, 4 = Bumpmapped water","defaultValue":1,"minimumValue":0,"maximumValue":4,"safemodeValue":0,"type":"int"},"ReportGLErrors":{"declarationFile":"../../rts/Rendering/GL/myGL.cpp","declarationLine":29,"defaultValue":0,"type":"bool"},"RotOverheadEnabled":{"declarationFile":"../../rts/Game/Camera/RotOverheadController.cpp","declarationLine":14,"defaultValue":1,"type":"bool"},"RotOverheadFOV":{"declarationFile":"../../rts/Game/Camera/RotOverheadController.cpp","declarationLine":15,"defaultValue":45,"type":"float"},"RotOverheadMouseScale":{"declarationFile":"../../rts/Game/Camera/RotOverheadController.cpp","declarationLine":12,"defaultValue":0.01,"type":"float"},"RotOverheadScrollSpeed":{"declarationFile":"../../rts/Game/Camera/RotOverheadController.cpp","declarationLine":13,"defaultValue":10,"type":"int"},"RotateLogFiles":{"declarationFile":"../../rts/System/LogOutput.cpp","declarationLine":32,"description":"rotate logfiles, old logfiles will be moved into the subfolder \"log\".","defaultValue":0,"type":"bool"},"SMFTexAniso":{"declarationFile":"../../rts/Map/SMF/SMFReadMap.cpp","declarationLine":29,"defaultValue":0,"type":"float"},"ScreenshotCounter":{"declarationFile":"../../rts/Rendering/Screenshot.cpp","declarationLine":20,"defaultValue":0,"type":"int"},"ScrollWheelSpeed":{"declarationFile":"../../rts/Game/UI/MouseHandler.cpp","declarationLine":60,"defaultValue":25,"minimumValue":-255,"maximumValue":255,"type":"float"},"ServerLogDebugMessages":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":85,"defaultValue":0,"type":"bool"},"ServerLogErrorMessages":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":84,"defaultValue":0,"type":"bool"},"ServerLogInfoMessages":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":83,"defaultValue":0,"type":"bool"},"ServerLogWarnMessages":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":86,"defaultValue":0,"type":"bool"},"ServerRecordDemos":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":81,"defaultValue":0,"type":"bool"},"SetCoreAffinity":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":87,"description":"Defines a bitmask indicating which CPU cores the main-thread should use.","defaultValue":"0","safemodeValue":"1","type":"unsigned"},"SetCoreAffinitySim":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":88,"description":"Defines a bitmask indicating which CPU cores the sim-thread should use.","defaultValue":"0","safemodeValue":"1","type":"unsigned"},"ShadowMapSize":{"declarationFile":"../../rts/Rendering/ShadowHandler.cpp","declarationLine":31,"description":"Sets the resolution of shadows. Higher numbers increase quality at the cost of performance.","defaultValue":2048,"minimumValue":32,"type":"int"},"ShadowProjectionMode":{"declarationFile":"../../rts/Rendering/ShadowHandler.cpp","declarationLine":32,"defaultValue":1,"type":"int"},"Shadows":{"declarationFile":"../../rts/Rendering/ShadowHandler.cpp","declarationLine":30,"description":"Sets whether shadows are rendered.\n0:=off, 1:=full, 2:=fast (skip terrain)","defaultValue":2,"minimumValue":0,"type":"int"},"ShowClock":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":174,"description":"Displays a clock on the top-right corner of the screen showing the elapsed time of the current game.","defaultValue":1,"type":"bool"},"ShowFPS":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":173,"description":"Displays current framerate.","defaultValue":0,"type":"bool"},"ShowHealthBars":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":73,"defaultValue":1,"type":"bool"},"ShowLoadMessages":{"declarationFile":"../../rts/Game/LoadScreen.cpp","declarationLine":42,"defaultValue":1,"type":"bool"},"ShowMTInfo":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":176,"defaultValue":1,"type":"bool"},"ShowPlayerInfo":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":177,"defaultValue":1,"type":"int"},"ShowRezBars":{"declarationFile":"../../rts/Rendering/FeatureDrawer.cpp","declarationLine":36,"defaultValue":1,"type":"bool"},"ShowSpeed":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":175,"description":"Displays current game speed.","defaultValue":0,"type":"bool"},"SimpleMiniMapColors":{"declarationFile":"../../rts/Game/UI/MiniMap.cpp","declarationLine":74,"defaultValue":0,"type":"bool"},"SmallFontFile":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":95,"description":"Sets the font of Spring engine small text.","defaultValue":"fonts/FreeSansBold.otf","type":"std::string"},"SmallFontOutlineWeight":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":101,"description":"see FontOutlineWeight","defaultValue":10,"type":"float"},"SmallFontOutlineWidth":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":100,"description":"see FontOutlineWidth","defaultValue":2,"type":"int"},"SmallFontSize":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":97,"description":"Sets the font size (in pixels) of the engine GUIs and more.","defaultValue":14,"type":"int"},"SmoothEnabled":{"declarationFile":"../../rts/Game/Camera/SmoothController.cpp","declarationLine":22,"defaultValue":1,"type":"bool"},"SmoothFOV":{"declarationFile":"../../rts/Game/Camera/SmoothController.cpp","declarationLine":23,"defaultValue":45,"type":"float"},"SmoothLines":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":90,"description":"Smooth lines.\n 0 := off\n 1 := fastest\n 2 := don't care\n 3 := nicest","defaultValue":2,"minimumValue":0,"maximumValue":3,"safemodeValue":0,"type":"int"},"SmoothPoints":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":91,"description":"Smooth points.\n 0 := off\n 1 := fastest\n 2 := don't care\n 3 := nicest","defaultValue":2,"minimumValue":0,"maximumValue":3,"safemodeValue":0,"type":"int"},"SmoothScrollSpeed":{"declarationFile":"../../rts/Game/Camera/SmoothController.cpp","declarationLine":20,"defaultValue":10,"type":"int"},"SmoothTiltSpeed":{"declarationFile":"../../rts/Game/Camera/SmoothController.cpp","declarationLine":21,"defaultValue":1,"type":"float"},"SourcePort":{"declarationFile":"../../rts/Net/Protocol/NetProtocol.cpp","declarationLine":24,"defaultValue":0,"type":"int"},"SpeedControl":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":74,"description":"Sets how server adjusts speed according to player's load (CPU), 1: use average, 2: use highest","defaultValue":1,"minimumValue":1,"maximumValue":2,"type":"int"},"SpringData":{"declarationFile":"../../rts/System/FileSystem/DataDirLocater.cpp","declarationLine":32,"description":"List of addidional data-directories, separated by ';' on windows, ':' on other OSs","readOnly":1,"defaultValue":"","type":"std::string"},"StacktraceOnGLErrors":{"declarationFile":"../../rts/Rendering/GL/myGL.cpp","declarationLine":30,"description":"Create a stacktrace when an OpenGL error occurs (only available in DEBUG builds)","defaultValue":0,"type":"bool"},"TCPAllowConnect":{"declarationFile":"../../rts/lib/luasocket/src/restrictions.cpp","declarationLine":19,"readOnly":1,"defaultValue":"","type":"std::string"},"TCPAllowListen":{"declarationFile":"../../rts/lib/luasocket/src/restrictions.cpp","declarationLine":20,"readOnly":1,"defaultValue":"","type":"std::string"},"TWEnabled":{"declarationFile":"../../rts/Game/Camera/TWController.cpp","declarationLine":17,"defaultValue":1,"type":"bool"},"TWFOV":{"declarationFile":"../../rts/Game/Camera/TWController.cpp","declarationLine":18,"defaultValue":45,"type":"float"},"TWScrollSpeed":{"declarationFile":"../../rts/Game/Camera/TWController.cpp","declarationLine":16,"defaultValue":10,"type":"int"},"TeamHighlight":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":54,"defaultValue":1,"minimumValue":0,"maximumValue":2,"type":"int"},"TeamNanoSpray":{"declarationFile":"../../rts/Rendering/GlobalRendering.cpp","declarationLine":22,"defaultValue":1,"type":"bool"},"TextureLODBias":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":92,"defaultValue":0,"minimumValue":-4,"maximumValue":4,"type":"float"},"TooltipGeometry":{"declarationFile":"../../rts/Game/UI/TooltipConsole.cpp","declarationLine":26,"defaultValue":"0.0 0.0 0.41 0.1","type":"std::string"},"TooltipOutlineFont":{"declarationFile":"../../rts/Game/UI/TooltipConsole.cpp","declarationLine":27,"defaultValue":1,"type":"bool"},"TreeRadius":{"declarationFile":"../../rts/Rendering/Env/ITreeDrawer.cpp","declarationLine":18,"defaultValue":1408,"minimumValue":0,"type":"int"},"UDPAllowConnect":{"declarationFile":"../../rts/lib/luasocket/src/restrictions.cpp","declarationLine":21,"readOnly":1,"defaultValue":"","type":"std::string"},"UDPAllowListen":{"declarationFile":"../../rts/lib/luasocket/src/restrictions.cpp","declarationLine":22,"readOnly":1,"defaultValue":"","type":"std::string"},"UDPConnectionLogDebugMessages":{"declarationFile":"../../rts/System/Net/UDPConnection.cpp","declarationLine":21,"defaultValue":0,"type":"bool"},"UnitIconDist":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":71,"defaultValue":200,"type":"int"},"UnitLodDist":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":70,"defaultValue":1000,"type":"int"},"UnitTransparency":{"declarationFile":"../../rts/Rendering/UnitDrawer.cpp","declarationLine":72,"defaultValue":0.7,"type":"float"},"UseCREGSaveLoad":{"declarationFile":"../../rts/System/LoadSave/LoadSaveHandler.cpp","declarationLine":11,"defaultValue":0,"type":"bool"},"UseDistToGroundForIcons":{"declarationFile":"../../rts/Game/Camera/CameraController.cpp","declarationLine":10,"defaultValue":0.95,"type":"float"},"UseEFX":{"declarationFile":"../../rts/System/Sound/EFX.cpp","declarationLine":18,"defaultValue":1,"safemodeValue":0,"type":"bool"},"UseHighResTimer":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":103,"description":"On Windows, sets whether Spring will use low- or high-resolution timer functions for tasks like graphical interpolation between game frames.","defaultValue":0,"type":"bool"},"UseNetMessageSmoothingBuffer":{"declarationFile":"../../rts/System/GlobalConfig.cpp","declarationLine":59,"defaultValue":1,"type":"bool"},"UsePBO":{"declarationFile":"../../rts/Rendering/GL/VBO.cpp","declarationLine":18,"defaultValue":1,"safemodeValue":0,"type":"bool"},"UseVBO":{"declarationFile":"../../rts/Rendering/GL/VBO.cpp","declarationLine":17,"defaultValue":1,"safemodeValue":0,"type":"bool"},"VSync":{"declarationFile":"../../rts/Rendering/VerticalSync.cpp","declarationLine":16,"description":"Vertical synchronization, update render frames in monitor's refresh rate.\n <=0: off\n 1: enabled \n x: render with monitor-Hz/x FPS","defaultValue":0,"minimumValue":0,"type":"int"},"WhiteListAdditionalPlayers":{"declarationFile":"../../rts/Net/GameServer.cpp","declarationLine":77,"defaultValue":1,"type":"bool"},"WindowBorderless":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":109,"description":"When set and Fullscreen is 0, will put the game in Borderless Window mode, also known as Windowed Fullscreen. When using this, it is generally best to also set WindowPosX and WindowPosY to 0","defaultValue":0,"type":"bool"},"WindowPosX":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":106,"description":"Sets the horizontal position of the game window, if Fullscreen is 0. When WindowBorderless is set, this should usually be 0.","defaultValue":32,"type":"int"},"WindowPosY":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":107,"description":"Sets the vertical position of the game window, if Fullscreen is 0. When WindowBorderless is set, this should usually be 0.","defaultValue":32,"type":"int"},"WindowState":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":108,"defaultValue":0,"type":"int"},"WindowedEdgeMove":{"declarationFile":"../../rts/Game/Game.cpp","declarationLine":171,"description":"Sets whether moving the mouse cursor to the screen edge will move the camera across the map.","defaultValue":1,"type":"bool"},"WorkerThreadCount":{"declarationFile":"../../rts/System/Platform/Threading.cpp","declarationLine":39,"description":"Count of worker threads (including mainthread!) used in parallel sections.","defaultValue":-1,"minimumValue":-1,"safemodeValue":0,"type":"int"},"WorkerThreadSpinTime":{"declarationFile":"../../rts/System/Platform/Threading.cpp","declarationLine":40,"description":"The number of milliseconds worker threads will spin after no tasks to perform.","defaultValue":5,"minimumValue":0,"type":"int"},"XResolution":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":104,"description":"Sets the width of the game screen. If set to 0 Spring will autodetect the current resolution of your desktop.","defaultValue":0,"minimumValue":0,"type":"int"},"YResolution":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":105,"description":"Sets the height of the game screen. If set to 0 Spring will autodetect the current resolution of your desktop.","defaultValue":0,"minimumValue":0,"type":"int"},"address":{"declarationFile":"../../rts/Menu/SelectMenu.cpp","declarationLine":43,"description":"Last Ip/hostname used as direct connect in the menu.","defaultValue":"","type":"std::string"},"name":{"declarationFile":"../../rts/System/SpringApp.cpp","declarationLine":112,"description":"Sets your name in the game. Since this is overridden by lobbies with your lobby username when playing, it usually only comes up when viewing replays or starting the engine directly for testing purposes.","defaultValue":"UnnamedPlayer","type":"std::string"},"snd_airAbsorption":{"declarationFile":"../../rts/System/Sound/EFX.cpp","declarationLine":17,"defaultValue":0.1,"type":"float"},"snd_device":{"declarationFile":"../../rts/System/Sound/Sound.cpp","declarationLine":41,"description":"Sets the used output device. See \"Available Devices\" section in infolog.txt.","defaultValue":"","type":"std::string"},"snd_volbattle":{"declarationFile":"../../rts/System/Sound/Sound.cpp","declarationLine":38,"description":"Volume for \"battle\" sound channel.","defaultValue":100,"minimumValue":0,"maximumValue":200,"type":"int"},"snd_volgeneral":{"declarationFile":"../../rts/System/Sound/Sound.cpp","declarationLine":36,"description":"Volume for \"general\" sound channel.","defaultValue":100,"minimumValue":0,"maximumValue":200,"type":"int"},"snd_volmaster":{"declarationFile":"../../rts/System/Sound/Sound.cpp","declarationLine":35,"description":"Master sound volume.","defaultValue":60,"minimumValue":0,"maximumValue":200,"type":"int"},"snd_volmusic":{"declarationFile":"../../rts/System/Sound/Sound.cpp","declarationLine":40,"description":"Volume for \"music\" sound channel.","defaultValue":100,"minimumValue":0,"maximumValue":200,"type":"int"},"snd_volui":{"declarationFile":"../../rts/System/Sound/Sound.cpp","declarationLine":39,"description":"Volume for \"ui\" sound channel.","defaultValue":100,"minimumValue":0,"maximumValue":200,"type":"int"},"snd_volunitreply":{"declarationFile":"../../rts/System/Sound/Sound.cpp","declarationLine":37,"description":"Volume for \"unit reply\" sound channel.","defaultValue":100,"minimumValue":0,"maximumValue":200,"type":"int"}}
	
}); }); //declare lwidgets.SpringSettings
